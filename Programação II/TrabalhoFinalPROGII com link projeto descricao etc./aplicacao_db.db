-- Início SQL

-- Remove tabelas caso já existam
-- DROP TABLE permissao, usuario, tipo_permissao;

-- Cria tabela para usuário do sistema e inicializa com dois usuários iniciais
CREATE TABLE IF NOT EXISTS public.usuario
(
    id_usuario SERIAL, 
    usuario text NOT NULL UNIQUE,
	email text NOT NULL,
	senha text NOT NULL,
	cidade text NOT NULL,
	pais text NOT NULL,
    cpf text NOT NULL,
    
    CONSTRAINT usuario_pkey PRIMARY KEY (id_usuario)
);



CREATE TABLE IF NOT EXISTS public.product
(
    id_product SERIAL, 
    nome text NOT NULL UNIQUE,
	codigo integer,
    quantitykl numeric(10,2),
    quantityint numeric(10,2),
    priceund numeric(10,2),
    pricekl numeric(10,2),
    quantidadetotalemestoque numeric(10,2),
    precototalemestoque numeric(10,2) NOT NULL,
    
    CONSTRAINT product_pkey PRIMARY KEY (id_product)
);

CREATE TABLE IF NOT EXISTS public.venda
(
    id_venda SERIAL, 
    codigoproduto text NOT NULL UNIQUE,
	quantidade integer NOT NULL,
    preco numeric(10,2) NOT NULL,
    formapagamento text NOT NULL,
    datavenda date,
    
    CONSTRAINT venda_pkey PRIMARY KEY (id_venda)
);

-- Cria tabela para tipos de permissões usadas no sistema e inicializa com dois valores
CREATE TABLE IF NOT EXISTS public.tipo_permissao
(
    id_tipo_permissao SERIAL,
    permissao text NOT NULL,
    CONSTRAINT tipo_permissao_pkey PRIMARY KEY (id_tipo_permissao)
);
-- Inicializa tipos de permissao do sistema
INSERT INTO tipo_permissao (permissao) VALUES ('ADMINISTRADOR');
INSERT INTO tipo_permissao (permissao) VALUES ('CLIENTE');
INSERT INTO tipo_permissao (permissao) VALUES ('SERVIDOR');

-- Cria tabela de relacionamento nxn entre usuários e tipos de permissões
CREATE TABLE IF NOT EXISTS public.permissao
(
    id_usuario bigint NOT NULL,
	id_product bigint NOT NULL,
	id_venda bigint NOT NULL,
    id_tipo_permissao bigint NOT NULL,
    CONSTRAINT permissao_pkey PRIMARY KEY (id_usuario,id_tipo_permissao),
    CONSTRAINT permissao_usuario_fkey FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario) ON DELETE CASCADE,
    CONSTRAINT permissao_tipo_permissao_fkey FOREIGN KEY (id_tipo_permissao) REFERENCES tipo_permissao (id_tipo_permissao) ON DELETE CASCADE
);

-- Conceda permissões ao usuário do banco que será usado pela aplicação
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA "public" to aplicacao_user;
GRANT SELECT, USAGE, UPDATE ON ALL SEQUENCES IN SCHEMA "public" to aplicacao_user;
-- Fim SQL